//
//  ListWorkerTests.swift
//  Mobile Phone Buyerâ€™s Guide
//
//  Created by Tanasak Ngerniam on 28/1/2562 BE.
//  Copyright (c) 2562 NilNilNil. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Mobile_Phone_Buyer_s_Guide
import XCTest

class ListWorkerTests: XCTestCase {
    // MARK: Subject under test
    let timeout: TimeInterval = 15.0
    var phoneData: [Phone]!
    var sortData: SortPredicate!
    var sut: ListWorker!

    // MARK: Test lifecycle

    override func setUp() {
        super.setUp()
        setupListWorker()
    }

    override func tearDown() {
        DataManager.shared.clearAllData()
        phoneData = nil
        sortData = nil
        super.tearDown()
    }

    // MARK: Test setup

    func setupListWorker() {
        sut = ListWorker()
        phoneData = [Phone(id: 0,
                           name: "MockName",
                           price: 100.222,
                           brand: "MockBrand",
                           desciption: "MockDescription",
                           rating: 4.5,
                           thumbImageURL: "link",
                           isFavorite: false)]
        sortData = SortPredicate(predicate: .ratingDescending)

    }

    // MARK: Test doubles

    // MARK: Tests
    func testFetchPhoneList() {
        // Given
        let expectation = self.expectation(description: "Wait for FetchPhoneList() to return")

        // When
        sut.fetchPhoneList { (result) in
            switch result {
            case .success(_):
                expectation.fulfill()
            case .failure(let error):
                XCTFail(error.localizedDescription)
            }
        }

        // Then
        waitForExpectations(timeout: timeout, handler: nil)
    }

    func testLoadPhoneList() {
        // Given
        DataManager.shared.add(phoneData)

        // When
        let loadedPhoneList = sut.loadPhoneList()

        // Then
        XCTAssertEqual(phoneData, loadedPhoneList)
    }

    func testSetFavorite() {
        // Given
        let expectedFavoriteValue = !(phoneData.first?.isFavorite)!
        DataManager.shared.add(phoneData)

        // When
        sut.setFavorite(withId: (phoneData.first?.id)!)
        let loadedPhoneList = DataManager.shared.object(Phone.self, key: (phoneData.first?.id)!)

        // Then
        XCTAssertEqual(loadedPhoneList?.isFavorite, expectedFavoriteValue)
    }

    func testGetObervePhoneList() {
        // Given
        DataManager.shared.add(phoneData)

        // When
        let observerList = sut.getObervePhoneList()

        // Then
        XCTAssertNotNil(observerList)
    }

    func testGetOberveSort() {
        // Given
        DataManager.shared.add(sortData)

        // When
        let observerList = sut.getOberveSort()

        // Then
        XCTAssertNotNil(observerList)
    }


}
