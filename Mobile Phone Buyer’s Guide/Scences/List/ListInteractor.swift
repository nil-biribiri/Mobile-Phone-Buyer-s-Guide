//
//  ListInteractor.swift
//  Mobile Phone Buyerâ€™s Guide
//
//  Created by Tanasak Ngerniam on 26/1/2562 BE.
//  Copyright (c) 2562 NilNilNil. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListBusinessLogic {
    func fetchPhoneList(request: List.DeviceList.Request)
    func setFavoritePhone(withId id: Int)
}

protocol ListDataStore {
    var phoneList: [Phone] { get }
}

class ListInteractor: ListBusinessLogic, ListDataStore {
    var presenter: ListPresentationLogic?
    var worker = ListWorker()
    var phoneList: [Phone] = []

    // MARK: Do something
    func fetchPhoneList(request: List.DeviceList.Request) {
        presenter?.showLoading()
        var response = List.DeviceList.Response()
        worker.fetchPhoneList(withPredicate: request.fetchPridicate) { [weak self] (result) in
            switch result {
            case .success(let value):
                response.phoneList = value
                self?.phoneList = value
            case .failure(let error):
                response.errorMessage = error.localizedDescription
            }
            self?.presenter?.presentPhoneList(response: response)
        }
    }

    func setFavoritePhone(withId id: Int) {
        let response = List.DeviceList.Response.init(phoneList: worker.setFavorite(withId: id), errorMessage: nil)
        self.presenter?.presentPhoneList(response: response)
    }

}
